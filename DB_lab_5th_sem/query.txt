SELECT * FROM FB_AUTHOR

DESCRIBE FB_AUTHOR

/// TO ADD AN COLUMN/ATTRIBUTE IN TABLE
ALTER TABLE FB_AUTHOR
ADD MOBILE_NUMBER INT

///DROP COLUMN /ATTR IN TABLE
ALTER TABLE FB_AUTHOR
DROP COLUMN MOBILE_NUMBER

////  TO SET VALUE TO ANY PARTICULAR box... FIRST TWO LINES CHANGE ALL ROW OF THAT WHOLE COLUMN
UPDATE FB_AUTHOR
SET MOBILE_NUMBER=8116072516
WHERE FB_AUTHOR.NAME='SIDDHARTHA' 

////  TO SET VALUE TO ANY PARTICULAR box... FIRST TWO LINES CHANGE ALL ROW OF THAT WHOLE COLUMN
UPDATE FB_AUTHOR
SET MOBILE_NUMBER=1111111111

//// access column with alias from table:: select column as column_alias from table
SELECT MOBILE_NUMBER AS PHONE
FROM FB_AUTHOR

//// extract same as above BUT YOU CAN EXTRACT DATA SPECIFIC TO ROW..
SELECT MOBILE_NUMBER AS PHONE
FROM FB_AUTHOR
where FB_AUTHOR.NAME='SIDDHARTHA'

//// extract specific data
select NAME
FROM FB_AUTHOR
WHERE FB_AUTHOR.AGE>40

//// SELECT NAMES FROM FB_AUTHOR
select NAME
FROM FB_AUTHOR
WHERE FB_AUTHOR.AGE FB_AUTHOR.AGE>40

//// HOW TO USE AVERAGE FUNCTION
select avg(AGE) FROM FB_AUTHOR

//// //// COUNT NUMBER OF ELEMENTS OF PARTICULAR COLUMN
SELECT COUNT(FB_POST.TYPE) FROM FB_POST 

//// COUNT NUMBER OF ELEMENTS OF PARTICULAR COLUMN WITH SOME CONDITIONS  
SELECT COUNT(FB_POST.TYPE) FROM FB_POST 
WHERE FB_POST.TYPE='STATUS'


create table fb_comment
( 
text varchar(80),
id int not null primary key,
post int foreign key references fb_post(id),
type varchar(80) check (type='picture' or type='status' or type='video'),
author int foreign key references fb_author(id)
)

create table fb_author
( 
name varchar(80),
gender varchar(80) not null check (gender='MALE' or gender='FEMALE'),
city varchar(80),
country varchar(20) not null,
age int check (age>15 and age<105),
id int primary key
)

create table fb_post
(
text varchar(80),
id int not null primary key,
type varchar(20) check ( type='PICTURE' or type='STATUS' or type='VIDEO' ),
author int references fb_author(id)
);

CREATE TABLE BRANCH
(
BR_NAME VARCHAR(40) PRIMARY KEY,
BR_CITY VARCHAR(40),
ASSETS INT
);

CREATE TABLE CUSTOMER
(
CUST_NAME VARCHAR(40) PRIMARY KEY,
CUST_CITY VARCHAR(40),
CUST_STREET VARCHAR(40)
);

CREATE TABLE LOAN
(
BR_NAME VARCHAR(40),
LOAN_NO INT PRIMARY KEY,
AMOUNT INT
);

CREATE TABLE BORROWER
(
CUST_NAME VARCHAR(40) PRIMARY KEY,
LOAN_NO INT
);


CREATE TABLE ACCOUNT
(
BR_NAME VARCHAR(40),
ACC_NO INT PRIMARY KEY,
BALANCE INT
);

CREATE TABLE DEPOSITOR
(
CUST_NAME VARCHAR(40) PRIMARY KEY,
ACC_NO INT
);

DROP TABLE LOAN
DROP TABLE BORROWER
INSERT INTO LOAN
VALUES('NITDGP',1,88000)

SELECT * FROM LOAN;
SELECT * FROM ACCOUNT;
SELECT * FROM DEPOSITOR;
SELECT * FROM BORROWER;
SELECT * FROM LOAN
DESCRIBE BORROWER
Q1. FIND NAME OF ALL BRANCHES IN LOAN RELATION 
SELECT DISTINCT LOAN.

INSERT INTO ACCOUNT
VALUES('NITDGP',3,34000)
INSERT INTO ACCOUNT
VALUES('DURGAPUR',1,43000)
INSERT INTO ACCOUNT
VALUES('FAIZABAD',2,23000)
INSERT INTO ACCOUNT
VALUES('BURDWAN',4,56000)
INSERT INTO ACCOUNT
VALUES('KOLKATA',5,25000)
INSERT INTO DEPOSITOR
VALUES('NANDI',1);

INSERT INTO DEPOSITOR
VALUES('SANYAL',2);
INSERT INTO DEPOSITOR
VALUES('SARKAR',3);
INSERT INTO DEPOSITOR
VALUES('SROY',4);
INSERT INTO DEPOSITOR
VALUES('PKG',5);
INSERT INTO DEPOSITOR
VALUES('SAADHU',6);
INSERT INTO DEPOSITOR
VALUES('TP',7);
INSERT INTO DEPOSITOR
VALUES('TD',8);


INSERT INTO BORROWER 
VALUES('DEEPAK',1);
INSERT INTO BORROWER 
VALUES('SAIKAT',2);
INSERT INTO BORROWER 
VALUES('SIDDHARTHA',3);
INSERT INTO BORROWER 
VALUES('HIMANSU',4);
INSERT INTO BORROWER 
VALUES('AVINASH',5);
INSERT INTO BORROWER 
VALUES('ABHISHEK',6);
INSERT INTO BORROWER 
VALUES('ABHINAV',7);
INSERT INTO BORROWER 
VALUES('AISHGUP21',8);
INSERT INTO BORROWER 
VALUES('PRITAM',9);
INSERT INTO BORROWER 
VALUES('KOUSHIK',10);
INSERT INTO BORROWER 
VALUES('DEVEL',11);

Q1. FIND NAME OF ALL BRANCHES IN LOAN RELATION 
SELECT DISTINCT LOAN.BR_NAME FROM LOAN

Q2. FIND ALL LOAN NO. FOR LOAN MADE AT PARKSTREET BRANCH WITH AMOUNT GREATER THAN 20000
SELECT LOAN.LOAN_NO
FROM LOAN
WHERE LOAN.BR_NAME='PARKSTREET' AND LOAN.AMOUNT>95000

Q3. FIND LOAN NO. OF THOSE LOAN WITH LOAN AMOUNT BETWEEN 80000 AND 90000
SELECT LOAN.LOAN_NO
FROM LOAN
WHERE LOAN.AMOUNT BETWEEN 80000 AND 90000

Q4. TO LIST ALL CUSTOMER IN ALPHABETIC ORDER WHO HAVE LOAN AT PARKSTREET BRANCH
select BORROWER.CUST_NAME
FROM BORROWER,LOAN
WHERE LOAN.LOAN_NO=BORROWER.LOAN_NO AND LOAN.BR_NAME='PARKSTREET'

Q5. FIND ALL CUSTOMER NAMES WHO HAVE EITHER LOAN OR ACCOUNT OR BOTH AT BANK
SELECT BORROWER.CUST_NAME FROM LOAN,BORROWER WHERE LOAN.LOAN_NO=BORROWER.LOAN_NO
UNION ALL
SELECT DEPOSITOR.CUST_NAME FROM ACCOUNT,DEPOSITOR WHERE ACCOUNT.ACC_NO=DEPOSITOR.ACC_NO
/// 'UNION' FOR DISTINCT ELEMENTS ONLY... 'UNION ALL' INCLUDING DUPLICATE ELEMENTS TOO

Q6. 

QUESTION 1:

SELECT FB_AUTHOR.NAME
FROM FB_AUTHOR,FB_POST
WHERE FB_AUTHOR.ID=FB_POST.AUTHOR AND LENGTH(FB_POST.TEXT)<10

QUESTION 2:

select FB_AUTHOR.NAME
FROM FB_AUTHOR,FB_POST
WHERE FB_POST.AUTHOR=FB_AUTHOR.ID
GROUP BY FB_POST.AUTHOR 
HAVING COUNT(FB_POST.AUTHOR)>2

QUESTION 3:
METHOD - 1:::
SELECT FB_AUTHOR.NAME,FB_AUTHOR.ID,FB_POST.TEXT,FB_POST.ID
FROM FB_AUTHOR,FB_POST
WHERE FB_POST.AUTHOR=FB_AUTHOR.ID
UNION
SELECT FB_AUTHOR.NAME,FB_AUTHOR.ID,FB_COMMENT.TEXT,FB_COMMENT.ID
FROM FB_AUTHOR,FB_COMMENT
WHERE FB_AUTHOR.ID=FB_COMMENT.AUTHOR

QUESTION 4:
SELECT FB_AUTHOR.NAME,FB_POST.TEXT,FB_COMMENT.TEXT
FROM FB_POST,FB_COMMENT,FB_AUTHOR
WHERE FB_POST.AUTHOR=FB_AUTHOR.ID AND FB_POST.ID=FB_COMMENT.POST AND FB_AUTHOR.NAME LIKE 'S%'


Q5. 
SELECT FB_AUTHOR.NAME,FB_AUTHOR.CITY,FB_AUTHOR.COUNTRY,FB_POST.TEXT
FROM FB_AUTHOR,FB_POST
WHERE FB_AUTHOR.ID=FB_POST.AUTHOR AND FB_POST.TEXT like '%you%'

Q6. 
SELECT FB_COMMENT.TEXT
FROM FB_COMMENT,FB_POST,FB_AUTHOR
WHERE FB_COMMENT.AUTHOR=FB_AUTHOR.ID AND FB_AUTHOR.AGE<30 AND FB_POST.ID=FB_COMMENT.POST AND 
FB_POST.ID IN 
(SELECT FB_POST.ID 
FROM FB_POST,FB_AUTHOR 
WHERE FB_POST.AUTHOR=FB_AUTHOR.ID AND FB_AUTHOR.NAME LIKE '%LEONARDO%')  

Q7.
SELECT FB_COMMENT.TEXT,FB_COMMENT.ID,FB_COMMENT.AUTHOR,FB_POST.TEXT,FB_POST.ID,FB_POST.AUTHOR
FROM FB_COMMENT,FB_POST
WHERE FB_POST.ID=FB_COMMENT.POST AND FB_POST.AUTHOR IN 
( SELECT FB_AUTHOR.ID 
FROM FB_AUTHOR
WHERE FB_AUTHOR.CITY='KOLKATA'
) AND FB_COMMENT.AUTHOR IN (
SELECT FB_AUTHOR.ID
FROM FB_AUTHOR
WHERE FB_AUTHOR.GENDER='FEMALE')

Q8.
ALTER TABLE FB_AUTHOR
ADD MOBILE_NUMBER INT

/// TO ADD COLUMN IN TABLE 
ALTER TABLE table_name
ADD col_name col_data-type

// TO DELETE COLUMN IN TABLE 
ALTER TABLE table_name
DROP COLUMN col_name 

// TO CHANGE ANY VALUE EVERYWHERE IN COLUMN
UPDATE table_name
SET col_name=value

// TO CHANGE ANY VALUE ANYWHERE IN COLUMN
UPDATE table_name
SET col_name=value
WHERE condition for row























